/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package interfacessWebCam;

import com.github.sarxos.webcam.Webcam;
import com.github.sarxos.webcam.WebcamImageTransformer;
import com.github.sarxos.webcam.WebcamPanel;
import com.github.sarxos.webcam.util.jh.JHGrayFilter;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Adriano
 */
public class TelaCadExemploWEBCAM extends javax.swing.JFrame implements WebcamImageTransformer{

    Webcam webcam = Webcam.getDefault();
    WebcamPanel painelWebcam = new WebcamPanel(webcam, false);
    
    // ImageTransformer, para possibilitar outros modos de imagem da camera
    private static final JHGrayFilter GRAY = new JHGrayFilter();

	@Override
	public BufferedImage transform(BufferedImage image) {
		return GRAY.filter(image, null);
	}
    /**
     * Creates new form TelaCadExemploWEBCAM
     */
    public TelaCadExemploWEBCAM() {
        initComponents();
        // Definindo uma borda para o painel da webcam (borda gravada)
        painelWebcam.setBorder(javax.swing.BorderFactory.createEtchedBorder()); 
    
        // Adicionando a webcam no painel
        this.add(painelWebcam);
      
        // Definindo o tamanho do painel
        painelWebcam.setSize(180, 130);
        
        // Definindo que a imagem da webcam deve preencher toda a área do painel
        // IMPORTANTE: O tamanho da foto NÃO corresponde ao tamanho visível da imagem!
        painelWebcam.setFillArea(true); 
        
        habilitarBotoesCamera(false); 
                
        this.pack();
       // pnImagemWebCam.add(new WebcamPanel(Webcam.getDefault()));
       // pnImagemWebCam.updateUI();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        tbtSwitchCamera = new javax.swing.JToggleButton();
        jSeparator1 = new javax.swing.JSeparator();
        btTirarFoto = new javax.swing.JToggleButton();
        btTomCinza = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton2.setText("Reset Size");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        tbtSwitchCamera.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfacessWebCam/webDisabled.png"))); // NOI18N
        tbtSwitchCamera.setToolTipText("Abrir/Fechar Webcam");
        tbtSwitchCamera.setBorderPainted(false);
        tbtSwitchCamera.setContentAreaFilled(false);
        tbtSwitchCamera.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/interfacessWebCam/webDisabled.png"))); // NOI18N
        tbtSwitchCamera.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/interfacessWebCam/webEnabled.png"))); // NOI18N
        tbtSwitchCamera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbtSwitchCameraActionPerformed(evt);
            }
        });

        btTirarFoto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfacessWebCam/tirar_fotoDisabled.png"))); // NOI18N
        btTirarFoto.setToolTipText("Tirar Foto");
        btTirarFoto.setBorderPainted(false);
        btTirarFoto.setContentAreaFilled(false);
        btTirarFoto.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/interfacessWebCam/tirar_fotoEnabled.png"))); // NOI18N
        btTirarFoto.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/interfacessWebCam/tirar_fotoDisabled.png"))); // NOI18N
        btTirarFoto.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/interfacessWebCam/tirar_fotoEnabledRollOver.png"))); // NOI18N
        btTirarFoto.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/interfacessWebCam/tirar_fotoEnabled.png"))); // NOI18N
        btTirarFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btTirarFotoActionPerformed(evt);
            }
        });

        btTomCinza.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfacessWebCam/tom_cinza.png"))); // NOI18N
        btTomCinza.setToolTipText("Ativar/Desativar Tons de Cinza");
        btTomCinza.setBorderPainted(false);
        btTomCinza.setContentAreaFilled(false);
        btTomCinza.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/interfacessWebCam/tom_cinzaRollOver.png"))); // NOI18N
        btTomCinza.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/interfacessWebCam/tom_cinzaRollOver.png"))); // NOI18N
        btTomCinza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btTomCinzaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(285, 285, 285)
                        .addComponent(jButton2)
                        .addGap(0, 68, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tbtSwitchCamera, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(btTirarFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btTomCinza, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(163, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btTomCinza, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(btTirarFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(tbtSwitchCamera, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(jButton2)
                .addGap(43, 43, 43))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        // pnImagemWebCam.setSize(100, 100);
        // ((WebcamPanel)(pnImagemWebCam.getParent());
    }//GEN-LAST:event_jButton2ActionPerformed

    private void tbtSwitchCameraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbtSwitchCameraActionPerformed
        // TODO add your handling code here:
        if(tbtSwitchCamera.isSelected())
        {
            webcam.open();
            tbtSwitchCamera.setText("Fechar webcam");
            habilitarBotoesCamera(true);
        }else
            {
                webcam.close();
                painelWebcam = new WebcamPanel(webcam, false);
                painelWebcam.repaint();
                this.pack();
                tbtSwitchCamera.setText("Abrir webcam"); 
                habilitarBotoesCamera(false);
            }
    }//GEN-LAST:event_tbtSwitchCameraActionPerformed

    private void btTirarFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTirarFotoActionPerformed
        // TODO add your handling code here:
        
        
        try
        {
            
            BufferedImage image = webcam.getImage();
            // Criando o ícone para demonstrar 
            ImageIcon icone = new ImageIcon(image);
            
            webcam.close();
            
            String nomeFoto = JOptionPane.showInputDialog(rootPane, "Digite um nome para a foto tirada!", "Nome da foto", 1, icone, null, "minha foto").toString();
            
            ImageIO.write(image, "JPG", new File(nomeFoto+".jpg"));
            
            JOptionPane.showMessageDialog(rootPane, "Foto tirada!");
            btTirarFoto.setSelected(true); 
            
            
        }catch(Exception e)
            {
                e.printStackTrace();
            }finally
                {
                    webcam.open();
                }
        
    }//GEN-LAST:event_btTirarFotoActionPerformed

    private void btTomCinzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTomCinzaActionPerformed
        // SE selecionado, ativa o tom de cinza, caso o contrário, fica colorido
        if(btTomCinza.isSelected())
        {
            webcam.setImageTransformer(this);
        }else
            {
                webcam.setImageTransformer(null); 
            }
    }//GEN-LAST:event_btTomCinzaActionPerformed

    public void habilitarBotoesCamera(boolean habilitar)
    {
        if(habilitar)
        {
            btTirarFoto.setEnabled(true); 
            btTirarFoto.setSelected(true);
            btTomCinza.setEnabled(true); 
        }else
            {
                 btTirarFoto.setEnabled(false); 
                 btTomCinza.setEnabled(false);
            }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaCadExemploWEBCAM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaCadExemploWEBCAM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaCadExemploWEBCAM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaCadExemploWEBCAM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaCadExemploWEBCAM().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btTirarFoto;
    private javax.swing.JToggleButton btTomCinza;
    private javax.swing.JButton jButton2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JToggleButton tbtSwitchCamera;
    // End of variables declaration//GEN-END:variables
}
